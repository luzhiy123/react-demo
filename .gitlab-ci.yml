stages:
  - deploy

variables:
  GIT_CLEAN_FLAGS: none

deploy-qa:
  stage: deploy
  tags:
    - shell-xiaomei-qa  # match shell runner for qa that has xiaomei command.
  script:
    - npm install
    - npm run build
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - xiaomei web deploy $CI_ENVIRONMENT_NAME --no-watch
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://partners.$CI_COMMIT_REF_NAME.hztl3.xyz
  only:
    refs: [ branches ]
    variables: [ '$CI_COMMIT_REF_NAME =~ /^(qa|qa2|uat)$/' ]

deploy-preview:
  stage: deploy
  tags:
    - shell-xiaomei-production # match shell runner for production that has xiaomei command.
  script:
    - npm install
    - npm run build
    - xiaomei web deploy preview -Wb "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
  environment:
    name: preview
    url: https://partners-preview.hztl3.com
  only:
    refs: [ branches ]
    variables: [ '$CI_COMMIT_REF_NAME == "preview"' ]
  when: manual
  allow_failure: false

deploy-production:
  stage: deploy
  tags:
    - shell-xiaomei-production # match shell runner for production that has xiaomei command.
  script:
    - npm install
    - npm run build
    - xiaomei web deploy production -Wb "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
  environment:
    name: production
    url: https://partners.threesoft.cn
  only:
    refs: [ branches ]
    variables: [ '$CI_COMMIT_REF_NAME == "master"' ]
  when: manual
  allow_failure: false

before_script:
  - buildDir=$(pwd) && echo $buildDir
  - projectDir=~/front/erp-partners && echo $projectDir
  - mkdir -p $(dirname $projectDir) && ln -sfT $buildDir $projectDir && cd $projectDir
